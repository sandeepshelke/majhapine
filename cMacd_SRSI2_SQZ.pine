//Created by user ChrisMoody updated 4-10-2014
//Regular MACD Indicator with Histogram that plots 4 Colors Based on Direction Above and Below the Zero Line
//Update allows Check Box Options, Show MacD & Signal Line, Show Change In color of MacD Line based on cross of Signal Line.
//Show Dots at Cross of MacD and Signal Line, Histogram can show 4 colors or 1, Turn on and off Histogram.
//Special Thanks to that incredible person in Tech Support whoem I won't say you r name so you don't get bombarded with emails
//Note the feature Tech Support showed me on how to set the default timeframe of the indicator to the chart Timeframe, but also allow you to choose a different timeframe.
//By the way I fully disclose that I completely STOLE the Dots at the MAcd Cross from "TheLark"

//@version=4
study(title="RSI custMACD SRSI SQZ", shorttitle="SRSI2_CM_SQZ")
src = input(title="Source", type=input.source, defval=close)
use_current_res = input(true, title="Use Current Chart Resolution?")
res_custom = input(title="Use Different Timeframe? Uncheck Box Above",
     type=input.resolution, defval="60")
smd = input(true, title="Show MacD & Signal Line? Also Turn Off Dots Below")
sd = input(true, title="Show Dots When MacD Crosses Signal Line?")
sh = input(true, title="Show Histogram?")
macd_colorChange = input(true,title="Change MacD Line Color-Signal Line Cross?")
hist_colorChange = input(true,title="MacD Histogram 4 Colors?")

res = use_current_res ? timeframe.period : res_custom

fast_length = input(12, minval=1)
slow_length=input(26,minval=1)
signal_length=input(9,minval=1)

fastMA = ema(src, fast_length)
slowMA = ema(src, slow_length)

macd = fastMA - slowMA
signal = sma(macd, signal_length)
hist = macd - signal

outMacD = security(syminfo.tickerid, res, macd)
outSignal = security(syminfo.tickerid, res, signal)
outHist = security(syminfo.tickerid, res, hist)

histA_IsUp = outHist > outHist[1] and outHist > 0
histA_IsDown = outHist < outHist[1] and outHist > 0
histB_IsDown = outHist < outHist[1] and outHist <= 0
histB_IsUp = outHist > outHist[1] and outHist <= 0

//MacD Color Definitions
macd_IsAbove = outMacD >= outSignal
macd_IsBelow = outMacD < outSignal

plot_color = hist_colorChange ? histA_IsUp ? color.aqua :
     histA_IsDown ? color.blue :
         histB_IsDown ? color.red :
             histB_IsUp ? color.maroon :color.yellow :color.gray
macd_color = macd_colorChange ? macd_IsAbove ? color.lime : color.red : color.red
signal_color = macd_colorChange ? macd_IsAbove ? color.yellow : color.yellow : color.lime

circleYPosition = outSignal

plot(smd and outMacD ? outMacD : na, title="MACD", color=macd_color, linewidth=4)
plot(smd and outSignal ? outSignal : na,
     title="Signal Line", color=signal_color, style=plot.style_line ,linewidth=2)
plot(sh and outHist ? outHist : na,
     title="Histogram", color=plot_color, style=plot.style_histogram, linewidth=4)
plot(sd and cross(outMacD, outSignal) ? circleYPosition : na,
     title="Cross", style=plot.style_circles, linewidth=4, color=macd_color)
hline(0, '0 Line', linestyle=hline.style_solid, linewidth=2, color=color.white)


//////////////////////////////////////////////////////////////////////////////////////////////////////
//// SRSI
smoothK = input(3, "K", minval=1)
smoothD = input(3, "D", minval=1)
length = input(14, "RSI Length", minval=1)
lengthStoch = input(14, "Stochastic Length", minval=1)
// src = input(close, title="RSI Source")
srsi = rsi(src, length)
k = sma(stoch(srsi, srsi, srsi, lengthStoch), smoothK)
d = sma(k, smoothD)
plot(k, "K", color=color.red)
plot(d, "D", color=color.green)

//// RSI
up = rma(max(change(src), 0), length)
down = rma(-min(change(src), 0), length)
rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))
plot(rsi, "RSI", color=color.yellow)
band1 = hline(70, "Upper Band", color=#C0C0C0)
bandm = hline(50, "Middle Band", color=color.new(#C0C0C0, 50))
band0 = hline(20, "Lower Band", color=#C0C0C0)
fill(band1, band0, color=color.new(#9915FF, 90), title="Background")

//// squeeze momemntum
lengthBB = input(20, title="BB Length")
mult = input(2.0,title="BB MultFactor")
lengthKC=input(20, title="KC Length")
multKC = input(1.5, title="KC MultFactor")

useTrueRange = input(true, title="Use TrueRange (KC)", type=input.bool)

// Calculate BB
basis = sma(src, lengthBB)
dev = multKC * stdev(src, lengthBB)
upperBB = basis + dev
lowerBB = basis - dev

// Calculate KC
ma = sma(src, lengthKC)
range = useTrueRange ? tr : (high - low)
rangema = sma(range, lengthKC)
upperKC = ma + rangema * multKC
lowerKC = ma - rangema * multKC

sqzOn  = (lowerBB > lowerKC) and (upperBB < upperKC)
sqzOff = (lowerBB < lowerKC) and (upperBB > upperKC)
noSqz  = (sqzOn == false) and (sqzOff == false)

val = linreg(src  -  avg(avg(highest(high, lengthKC), lowest(low, lengthKC)),sma(close,lengthKC)), lengthKC,0)
darkblue = #150bf4
lightblue = #1ff6fe
darkgreen = #12891b
lightgreen = #36ff00
darkred = #4b0101
lightred = #fe0a0a

bcolor = iff( val > 0, iff( val > nz(val[1]), lightgreen, darkgreen), iff( val < nz(val[1]), lightred, darkred))
scolor = noSqz ? lightblue : sqzOn ? darkblue : lightblue
plot(val, "squeeze", color=bcolor, style=plot.style_histogram, linewidth=6)
plot(0, "trend change", color=scolor, style=plot.style_circles, linewidth=4)

